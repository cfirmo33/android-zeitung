apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: "$rootProject.projectDir/keys.gradle"
apply from: "$rootProject.projectDir/gradle/config-kotlin-sources.gradle"

def sdk = rootProject.ext.sdkVersions
def apiKey = ext.apiKey
android {
    compileSdkVersion sdk.compileSdkVersion
    buildToolsVersion sdk.buildToolsVersion
    defaultConfig {
        minSdkVersion sdk.minSdkVersion
        targetSdkVersion sdk.targetSdkVersion
        buildConfigField 'String', 'BaseUrl', "\"https://newsapi.org/v2/\""
        buildConfigField 'String', 'ApiKey', "\"${apiKey.apiKey()}\""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
}

dependencies {
    def libs = rootProject.ext.libraryVersions
    def testLibs = rootProject.ext.testLibraryVersions

    api project(':domain')

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$libs.coroutinesVersion"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$libs.coroutinesVersion"

    api "com.squareup.retrofit2:retrofit:$libs.retoriftVersion"
    api "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$libs.retrofitCoroutineVersions"
    api "com.squareup.retrofit2:converter-moshi:$libs.moshiVersion"

    api "com.google.dagger:dagger:$libs.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$libs.daggerVersion"

    testImplementation "junit:junit:$testLibs.jUnitVersion"
    testImplementation("com.squareup.okhttp3:mockwebserver:$testLibs.mockWebServerVersion") {
        because "version 3.12.0 uses okhttp version 3.12.0 which is incompatible with retrofit 2.4.0"
    }
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$testLibs.mockitoKotlinVersion"
}

sourceCompatibility = "7"
targetCompatibility = "7"
